// Copyright (C) 2021-2022, Marco Wang
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#ifndef S2E_PLUGINS_REQUIEM_EXPLOIT_H
#define S2E_PLUGINS_REQUIEM_EXPLOIT_H

#include <s2e/S2E.h>
#include <s2e/S2EExecutionState.h>
#include <s2e/Plugins/Requiem/Pwnlib/ELF.h>

#include <map>
#include <string>
#include <vector>

namespace s2e::plugins::requiem {

// Forward declaration
class Requiem;

class Exploit {
public:
    // Variable map.
    using VarMap = std::map<std::string, uint64_t>;

    Exploit(Requiem &ctx,
            const std::string &elfFilename,
            const std::string &libcFilename);

    void registerGadget(const std::string &name, uint64_t addr);
    void registerMemLocation(const std::string &name, uint64_t addr);
    uint64_t resolveGadget(const std::string &assembly);

    void writeline();
    void writeline(const std::string &line);
    void writelines(const std::vector<std::string> &lines);


    const std::string &getElfFilename() const { return m_elfFilename; }
    const std::string &getLibcFilename() const { return m_libcFilename; }
    const std::string &getOutputFilename() const { return m_outputFilename; }
    const std::string &getContent() const { return m_content; }

    const VarMap &getGadgets() const { return m_gadgets; }
    const VarMap &getMemLocations() const { return m_memLocations; }

    const ELF &getElf() const { return m_elf; }
    const ELF &getLibc() const { return m_libc; }

    static const std::string s_shebang;

private:
    Requiem &m_ctx;

    std::string m_elfFilename;
    std::string m_libcFilename;

    std::string m_outputFilename;
    std::string m_content;
 
    VarMap m_gadgets;
    VarMap m_memLocations;

    ELF m_elf;
    ELF m_libc;
};

}  // namespace s2e::plugins::requiem

#endif  // S2E_PLUGINS_REQUIEM_EXPLOIT_H
